{"version":3,"file":"static/chunks/772.286329c351abfe12.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationMenu.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryCountTags.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationRowSet.tsx","webpack://_N_E/../ui-core/src/workspace/VirtualizedCodeLocationRow.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryLocationsList.tsx","webpack://_N_E/../ui-core/src/instance/flattenCodeLocationRows.tsx","webpack://_N_E/../ui-core/src/instance/CodeLocationsPage.tsx","webpack://_N_E/../ui-core/src/nav/InstanceWarningIcon.tsx","webpack://_N_E/../ui-core/src/nav/WorkspaceStatus.tsx","webpack://_N_E/../ui-core/src/instance/InstanceTabs.tsx","webpack://_N_E/../ui-core/src/instance/useCanSeeConfig.tsx","webpack://_N_E/../ui-core/src/workspace/ReloadAllButton.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border=\"bottom\"\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {\n  Button,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  StyledRawCodeMirror,\n  Table,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport * as yaml from 'yaml';\n\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\n\nexport const CodeLocationMenu = ({\n  locationNode,\n}: {\n  locationNode: WorkspaceRepositoryLocationNode;\n}) => {\n  const [configIsOpen, setConfigIsOpen] = React.useState(false);\n  const [libsIsOpen, setLibsIsOpen] = React.useState(false);\n\n  let libsMenuItem = null;\n  let libsDialog = null;\n  if (\n    locationNode.locationOrLoadError?.__typename === 'RepositoryLocation' &&\n    locationNode.locationOrLoadError.dagsterLibraryVersions !== null\n  ) {\n    libsMenuItem = (\n      <MenuItem icon=\"info\" text=\"View Dagster libraries\" onClick={() => setLibsIsOpen(true)} />\n    );\n    libsDialog = (\n      <DagsterLibrariesDialog\n        libraries={locationNode.locationOrLoadError.dagsterLibraryVersions}\n        isOpen={libsIsOpen}\n        setIsOpen={setLibsIsOpen}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-left\"\n        content={\n          <Menu>\n            <MenuItem icon=\"info\" text=\"View configuration\" onClick={() => setConfigIsOpen(true)} />\n            {libsMenuItem}\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />}></Button>\n      </Popover>\n      <CodeLocationConfigDialog\n        metadata={locationNode.displayMetadata}\n        isOpen={configIsOpen}\n        setIsOpen={setConfigIsOpen}\n      />\n      {libsDialog}\n    </>\n  );\n};\n\nexport const CodeLocationConfigDialog = ({\n  isOpen,\n  setIsOpen,\n  metadata,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  metadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  return (\n    <Dialog\n      title=\"Code location configuration\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <CodeLocationConfig displayMetadata={metadata} />\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const DagsterLibrariesDialog = ({\n  isOpen,\n  setIsOpen,\n  libraries,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  libraries: {name: string; version: string}[];\n}) => {\n  return (\n    <Dialog\n      title=\"Dagster library versions\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <Table>\n        <thead>\n          <tr>\n            <th>Libray</th>\n            <th>Version</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraries.map((library) => (\n            <tr key={library.name}>\n              <td>{library.name}</td>\n              <td>{library.version}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst CodeLocationConfig = ({\n  displayMetadata,\n}: {\n  displayMetadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  const yamlString = React.useMemo(() => {\n    const kvPairs = displayMetadata.reduce((accum, item) => {\n      return {...accum, [item.key]: item.value};\n    }, {});\n    return yaml.stringify(kvPairs);\n  }, [displayMetadata]);\n\n  return (\n    <StyledRawCodeMirror\n      value={yamlString}\n      options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n      theme={['config-editor']}\n    />\n  );\n};\n","import {Box, Tag, Tooltip} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\n\nimport {DagsterRepoOption} from './WorkspaceContext';\nimport {RepoAddress} from './types';\nimport {workspacePathFromAddress} from './workspacePath';\n\nexport const RepositoryCountTags = ({\n  repo,\n  repoAddress,\n}: {\n  repo: DagsterRepoOption['repository'];\n  repoAddress: RepoAddress;\n}) => {\n  const assetGroupCount = repo.assetGroups.length;\n  const jobCount = repo.pipelines.filter(({name}) => !isHiddenAssetGroupJob(name)).length;\n  const scheduleCount = repo.schedules.length;\n  const sensorCount = repo.sensors.length;\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n      <Tooltip\n        content={assetGroupCount === 1 ? '1 asset group' : `${assetGroupCount} asset groups`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/assets')}>\n          <Tag interactive icon=\"asset_group\">\n            {assetGroupCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={jobCount === 1 ? '1 job' : `${jobCount} jobs`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/jobs')}>\n          <Tag interactive icon=\"job\">\n            {jobCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip\n        content={scheduleCount === 1 ? '1 schedule' : `${scheduleCount} schedules`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/schedules')}>\n          <Tag interactive icon=\"schedule\">\n            {scheduleCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={sensorCount === 1 ? '1 sensor' : `${sensorCount} sensors`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/sensors')}>\n          <Tag interactive icon=\"sensors\">\n            {sensorCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n    </Box>\n  );\n};\n\nconst CountLink = styled(Link)`\n  :hover,\n  :active {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Icon,\n  JoinedButtons,\n  MiddleTruncate,\n  Tag,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {\n  NO_RELOAD_PERMISSION_TEXT,\n  ReloadRepositoryLocationButton,\n} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\nimport {TimeFromNow} from '../ui/TimeFromNow';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {WorkspaceDisplayMetadataFragment} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\n\ninterface Props {\n  locationNode: WorkspaceRepositoryLocationNode;\n}\n\nexport const CodeLocationRowSet = ({locationNode}: Props) => {\n  const {name, locationOrLoadError} = locationNode;\n\n  if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <tr>\n        <td style={{maxWidth: '400px', color: Colors.Gray500}}>\n          <MiddleTruncate text={name} />\n        </td>\n        <td>\n          <LocationStatus location={name} locationOrError={locationNode} />\n        </td>\n        <td style={{whiteSpace: 'nowrap'}}>\n          <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n        </td>\n        <td>{'\\u2013'}</td>\n        <td style={{width: '180px'}}>\n          <JoinedButtons>\n            <ReloadButton location={name} />\n            <CodeLocationMenu locationNode={locationNode} />\n          </JoinedButtons>\n        </td>\n      </tr>\n    );\n  }\n\n  const repositories = [...locationOrLoadError.repositories].sort((a, b) =>\n    a.name.localeCompare(b.name),\n  );\n\n  return (\n    <>\n      {repositories.map((repository) => {\n        const repoAddress = buildRepoAddress(repository.name, name);\n        const allMetadata = [...locationNode.displayMetadata, ...repository.displayMetadata];\n        return (\n          <tr key={repoAddressAsHumanString(repoAddress)}>\n            <td style={{maxWidth: '400px'}}>\n              <Box flex={{direction: 'column', gap: 4}}>\n                <div style={{fontWeight: 500}}>\n                  <Link to={workspacePathFromAddress(repoAddress)}>\n                    <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                  </Link>\n                </div>\n                <ImageName metadata={allMetadata} />\n                <ModuleOrPackageOrFile metadata={allMetadata} />\n              </Box>\n            </td>\n            <td>\n              <LocationStatus location={repository.name} locationOrError={locationNode} />\n            </td>\n            <td style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n            </td>\n            <td>\n              <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n            </td>\n            <td style={{width: '180px'}}>\n              <JoinedButtons>\n                <ReloadButton location={name} />\n                <CodeLocationMenu locationNode={locationNode} />\n              </JoinedButtons>\n            </td>\n          </tr>\n        );\n      })}\n    </>\n  );\n};\n\nexport const ImageName = ({metadata}: {metadata: WorkspaceDisplayMetadataFragment[]}) => {\n  const copy = useCopyToClipboard();\n  const imageKV = metadata.find(({key}) => key === 'image');\n  const value = imageKV?.value || '';\n\n  const onClick = React.useCallback(async () => {\n    copy(value);\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'done',\n      message: 'Image string copied!',\n    });\n  }, [copy, value]);\n\n  if (imageKV) {\n    return (\n      <ImageNameBox flex={{direction: 'row', gap: 4}}>\n        <span style={{fontWeight: 500}}>image:</span>\n        <Tooltip content=\"Click to copy\" placement=\"top\" display=\"block\">\n          <button onClick={onClick}>\n            <MiddleTruncate text={imageKV.value} />\n          </button>\n        </Tooltip>\n      </ImageNameBox>\n    );\n  }\n  return null;\n};\n\nconst ImageNameBox = styled(Box)`\n  width: 100%;\n  color: ${Colors.Gray700};\n  font-size: 12px;\n\n  .bp4-popover2-target {\n    overflow: hidden;\n  }\n\n  button {\n    background: transparent;\n    border: none;\n    color: ${Colors.Gray700};\n    cursor: pointer;\n    font-size: 12px;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n    width: 100%;\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n\nexport const ModuleOrPackageOrFile = ({\n  metadata,\n}: {\n  metadata: WorkspaceDisplayMetadataFragment[];\n}) => {\n  const imageKV = metadata.find(\n    ({key}) => key === 'module_name' || key === 'package_name' || key === 'python_file',\n  );\n  if (imageKV) {\n    return (\n      <Box\n        flex={{direction: 'row', gap: 4}}\n        style={{width: '100%', color: Colors.Gray700, fontSize: 12}}\n      >\n        <span style={{fontWeight: 500}}>{imageKV.key}:</span>\n        <MiddleTruncate text={imageKV.value} />\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport const LocationStatus = (props: {\n  location: string;\n  locationOrError: WorkspaceRepositoryLocationNode;\n}) => {\n  const {location, locationOrError} = props;\n  const [showDialog, setShowDialog] = React.useState(false);\n\n  const reloadFn = React.useMemo(() => buildReloadFnForLocation(location), [location]);\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationOrError.loadStatus === 'LOADING') {\n    if (locationOrError.locationOrLoadError) {\n      return (\n        <Tag minimal intent=\"primary\">\n          Updating...\n        </Tag>\n      );\n    } else {\n      return (\n        <Tag minimal intent=\"primary\">\n          Loading...\n        </Tag>\n      );\n    }\n  }\n\n  if (locationOrError.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '14px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={location}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nexport const ReloadButton = ({location}: {location: string}) => {\n  return (\n    <ReloadRepositoryLocationButton\n      location={location}\n      ChildComponent={({reloading, tryReload, hasReloadPermission}) => {\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <Tooltip\n              content={hasReloadPermission ? '' : NO_RELOAD_PERMISSION_TEXT}\n              canShow={!hasReloadPermission}\n              useDisabledButtonTooltipFix\n            >\n              <Button\n                icon={<Icon name=\"refresh\" />}\n                disabled={!hasReloadPermission}\n                loading={reloading}\n                onClick={() => tryReload()}\n              >\n                Reload\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }}\n    />\n  );\n};\n","import {Box, Colors, JoinedButtons, MiddleTruncate} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {TimeFromNow} from '../ui/TimeFromNow';\nimport {HeaderCell, RowCell} from '../ui/VirtualizedTable';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {ImageName, LocationStatus, ModuleOrPackageOrFile, ReloadButton} from './CodeLocationRowSet';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {\n  WorkspaceLocationNodeFragment,\n  WorkspaceRepositoryFragment,\n} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\n\nexport type CodeLocationRowType =\n  | {\n      type: 'repository';\n      codeLocation: WorkspaceLocationNodeFragment;\n      repository: WorkspaceRepositoryFragment;\n    }\n  | {type: 'error'; node: WorkspaceLocationNodeFragment};\n\nconst TEMPLATE_COLUMNS = '3fr 1fr 1fr 240px 160px';\n\ninterface ErrorRowProps {\n  locationNode: WorkspaceRepositoryLocationNode;\n  measure: (node: Element | null) => void;\n}\n\nexport const VirtualizedCodeLocationErrorRow = (props: ErrorRowProps) => {\n  const {locationNode, measure} = props;\n  const {name} = locationNode;\n  return (\n    <div ref={measure}>\n      <RowGrid border=\"bottom\">\n        <RowCell>\n          <MiddleTruncate text={name} />\n        </RowCell>\n        <RowCell>\n          <div>\n            <LocationStatus location={name} locationOrError={locationNode} />\n          </div>\n        </RowCell>\n        <RowCell>\n          <div style={{whiteSpace: 'nowrap'}}>\n            <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n          </div>\n        </RowCell>\n        <RowCell>{'\\u2013'}</RowCell>\n        <RowCell>\n          <JoinedButtons>\n            <ReloadButton location={name} />\n            <CodeLocationMenu locationNode={locationNode} />\n          </JoinedButtons>\n        </RowCell>\n      </RowGrid>\n    </div>\n  );\n};\n\ninterface Props {\n  codeLocation: WorkspaceRepositoryLocationNode;\n  repository: WorkspaceRepositoryFragment;\n  measure: (node: Element | null) => void;\n}\n\nexport const VirtualizedCodeLocationRow = (props: Props) => {\n  const {codeLocation, repository, measure} = props;\n  const repoAddress = buildRepoAddress(repository.name, repository.location.name);\n\n  const allMetadata = [...codeLocation.displayMetadata, ...repository.displayMetadata];\n\n  return (\n    <div ref={measure}>\n      <RowGrid border=\"bottom\">\n        <RowCell>\n          <Box flex={{direction: 'column', gap: 4}}>\n            <div style={{fontWeight: 500}}>\n              <Link to={workspacePathFromAddress(repoAddress)}>\n                <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n              </Link>\n            </div>\n            <ImageName metadata={allMetadata} />\n            <ModuleOrPackageOrFile metadata={allMetadata} />\n          </Box>\n        </RowCell>\n        <RowCell>\n          <div>\n            <LocationStatus location={repository.name} locationOrError={codeLocation} />\n          </div>\n        </RowCell>\n        <RowCell>\n          <div style={{whiteSpace: 'nowrap'}}>\n            <TimeFromNow unixTimestamp={codeLocation.updatedTimestamp} />\n          </div>\n        </RowCell>\n        <RowCell>\n          <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n        </RowCell>\n        <RowCell style={{alignItems: 'flex-end'}}>\n          <JoinedButtons>\n            <ReloadButton location={codeLocation.name} />\n            <CodeLocationMenu locationNode={codeLocation} />\n          </JoinedButtons>\n        </RowCell>\n      </RowGrid>\n    </div>\n  );\n};\n\nexport const VirtualizedCodeLocationHeader = () => {\n  return (\n    <Box\n      border=\"top-and-bottom\"\n      style={{\n        display: 'grid',\n        gridTemplateColumns: TEMPLATE_COLUMNS,\n        height: '32px',\n        fontSize: '12px',\n        color: Colors.Gray600,\n      }}\n    >\n      <HeaderCell>Name</HeaderCell>\n      <HeaderCell>Status</HeaderCell>\n      <HeaderCell>Updated</HeaderCell>\n      <HeaderCell>Definitions</HeaderCell>\n      <HeaderCell style={{textAlign: 'right'}}>Actions</HeaderCell>\n    </Box>\n  );\n};\n\nconst RowGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: ${TEMPLATE_COLUMNS};\n`;\n","import {Box, NonIdealState, Spinner} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport * as React from 'react';\n\nimport {Container, DynamicRowContainer, Inner} from '../ui/VirtualizedTable';\n\nimport {\n  CodeLocationRowType,\n  VirtualizedCodeLocationErrorRow,\n  VirtualizedCodeLocationHeader,\n  VirtualizedCodeLocationRow,\n} from './VirtualizedCodeLocationRow';\n\ninterface Props {\n  loading: boolean;\n  codeLocations: CodeLocationRowType[];\n  searchValue: string;\n}\n\nexport const RepositoryLocationsList = ({loading, codeLocations, searchValue}: Props) => {\n  const parentRef = React.useRef<HTMLDivElement | null>(null);\n\n  const rowVirtualizer = useVirtualizer({\n    count: codeLocations.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: () => 64,\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const items = rowVirtualizer.getVirtualItems();\n\n  if (loading && !items.length) {\n    return (\n      <Box flex={{gap: 8, alignItems: 'center'}} padding={{horizontal: 24}}>\n        <Spinner purpose=\"body-text\" />\n        <div>Loading...</div>\n      </Box>\n    );\n  }\n\n  if (!items.length) {\n    if (searchValue) {\n      return (\n        <Box padding={{vertical: 32}}>\n          <NonIdealState\n            icon=\"folder\"\n            title=\"No matching code locations\"\n            description={\n              <div>\n                No code locations were found for search query <strong>{searchValue}</strong>.\n              </div>\n            }\n          />\n        </Box>\n      );\n    }\n\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"folder\"\n          title=\"No code locations\"\n          description=\"When you add a code location, your definitions will appear here.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <VirtualizedCodeLocationHeader />\n      <div style={{overflow: 'hidden'}}>\n        <Container ref={parentRef}>\n          <Inner $totalHeight={totalHeight}>\n            <DynamicRowContainer $start={items[0]?.start ?? 0}>\n              {items.map(({index, key, measureElement}) => {\n                const row: CodeLocationRowType = codeLocations[index]!;\n                if (row.type === 'error') {\n                  return (\n                    <VirtualizedCodeLocationErrorRow\n                      key={key}\n                      locationNode={row.node}\n                      measure={measureElement}\n                    />\n                  );\n                }\n\n                return (\n                  <VirtualizedCodeLocationRow\n                    key={key}\n                    codeLocation={row.codeLocation}\n                    repository={row.repository}\n                    measure={measureElement}\n                  />\n                );\n              })}\n            </DynamicRowContainer>\n          </Inner>\n        </Container>\n      </div>\n    </>\n  );\n};\n","import {CodeLocationRowType} from '../workspace/VirtualizedCodeLocationRow';\nimport {WorkspaceLocationNodeFragment} from '../workspace/types/WorkspaceContext.types';\n\nconst flatten = (locationEntries: WorkspaceLocationNodeFragment[]) => {\n  // Consider each loaded repository to be a \"code location\".\n  const all: CodeLocationRowType[] = [];\n  for (const locationNode of locationEntries) {\n    const {locationOrLoadError} = locationNode;\n    if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n      all.push({type: 'error' as const, node: locationNode});\n    } else {\n      locationOrLoadError.repositories.forEach((repo) => {\n        all.push({type: 'repository' as const, codeLocation: locationNode, repository: repo});\n      });\n    }\n  }\n  return all;\n};\n\nconst filterBySearch = (flattened: CodeLocationRowType[], searchValue: string) => {\n  const queryString = searchValue.toLocaleLowerCase();\n  return flattened.filter((row) => {\n    if (row.type === 'error') {\n      return row.node.name.toLocaleLowerCase().includes(queryString);\n    }\n    return (\n      row.codeLocation.name.toLocaleLowerCase().includes(queryString) ||\n      row.repository.name.toLocaleLowerCase().includes(queryString)\n    );\n  });\n};\n\nexport const flattenCodeLocationRows = (\n  locationEntries: WorkspaceLocationNodeFragment[],\n  searchValue: string = '',\n) => {\n  const flattened = flatten(locationEntries);\n  const filtered = filterBySearch(flattened, searchValue);\n\n  return {\n    flattened,\n    filtered,\n  };\n};\n","import {Box, Heading, PageHeader, Subheading, TextInput} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepositoryLocationsList} from '../workspace/RepositoryLocationsList';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {flattenCodeLocationRows} from './flattenCodeLocationRows';\n\nconst SEARCH_THRESHOLD = 10;\n\nexport const CodeLocationsPage = () => {\n  useTrackPageView();\n  useDocumentTitle('Code locations');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const onChangeSearch = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  }, []);\n\n  const queryString = searchValue.toLocaleLowerCase();\n  const {flattened, filtered} = React.useMemo(() => {\n    return flattenCodeLocationRows(locationEntries, queryString);\n  }, [locationEntries, queryString]);\n\n  const entryCount = flattened.length;\n  const showSearch = entryCount > SEARCH_THRESHOLD;\n\n  const subheadingText = () => {\n    if (loading || !entryCount) {\n      return 'Code locations';\n    }\n\n    return entryCount === 1 ? '1 code location' : `${entryCount} code locations`;\n  };\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"locations\" />} />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n        style={{height: '64px'}}\n      >\n        {showSearch ? (\n          <TextInput\n            icon=\"search\"\n            value={searchValue}\n            onChange={onChangeSearch}\n            placeholder=\"Filter code locations by name…\"\n            style={{width: '400px'}}\n          />\n        ) : (\n          <Subheading id=\"repository-locations\">{subheadingText()}</Subheading>\n        )}\n        <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n          {showSearch ? <div>{`${entryCount} code locations`}</div> : null}\n          <ReloadAllButton />\n        </Box>\n      </Box>\n      <RepositoryLocationsList\n        loading={loading}\n        codeLocations={filtered}\n        searchValue={searchValue}\n      />\n    </Box>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default CodeLocationsPage;\n","import {Colors, Icon} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Tooltip, Spinner} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus = React.memo(({placeholder}: {placeholder: boolean}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.Gray300} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n  const {flagInstanceConcurrencyLimits} = useFeatureFlags();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig && flagInstanceConcurrencyLimits ? (\n          <TabLink id=\"concurrency\" title=\"Concurrency limits\" to=\"/concurrency\" />\n        ) : null}\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {useUnscopedPermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\n\nexport const ReloadAllButton = ({label = 'Reload all'}: {label?: string}) => {\n  const {\n    permissions: {canReloadWorkspace},\n    disabledReasons,\n  } = useUnscopedPermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = React.useState(!!error);\n  React.useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace) {\n    return (\n      <Tooltip content={disabledReasons.canReloadWorkspace}>\n        <Button icon={<Icon name=\"refresh\" />} disabled intent=\"none\">\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading} intent=\"none\">\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n"],"names":["PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","Colors","Gray50","padding","top","left","border","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","styled","CodeLocationMenu","param","locationNode","React","configIsOpen","setConfigIsOpen","libsIsOpen","setLibsIsOpen","libsMenuItem","libsDialog","locationOrLoadError","__typename","dagsterLibraryVersions","jsx_runtime","jsx","MenuItem","icon","text","onClick","DagsterLibrariesDialog","libraries","isOpen","setIsOpen","Fragment","Popover","position","content","Menu","Button","Icon","name","CodeLocationConfigDialog","metadata","displayMetadata","Dialog","onClose","style","width","CodeLocationConfig","DialogFooter","topBorder","intent","Table","thead","tr","th","tbody","map","library","td","version","yamlString","kvPairs","reduce","accum","item","_object_spread_props","_","_object_spread","_define_property","key","value","yaml","StyledRawCodeMirror","options","readOnly","lineNumbers","mode","theme","RepositoryCountTags","repo","repoAddress","assetGroupCount","assetGroups","length","jobCount","pipelines","filter","isHiddenAssetGroupJob","scheduleCount","schedules","sensorCount","sensors","Tooltip","concat","placement","CountLink","to","workspacePathFromAddress","Tag","interactive","Link","ImageName","copy","useCopyToClipboard","imageKV","find","_async_to_generator","showSharedToaster","message","_state","sent","ImageNameBox","span","fontWeight","display","button","MiddleTruncate","Gray700","ModuleOrPackageOrFile","color","fontSize","LocationStatus","locationOrError","location","showDialog","setShowDialog","reloadFn","buildReloadFnForLocation","useRepositoryLocationReload","scope","reloading","tryReload","loadStatus","minimal","ButtonLink","RepositoryLocationNonBlockingErrorDialog","error","onDismiss","onTryReload","ReloadButton","ReloadRepositoryLocationButton","ChildComponent","hasReloadPermission","NO_RELOAD_PERMISSION_TEXT","canShow","useDisabledButtonTooltipFix","disabled","loading","TEMPLATE_COLUMNS","VirtualizedCodeLocationErrorRow","measure","div","ref","RowGrid","RowCell","whiteSpace","TimeFromNow","unixTimestamp","updatedTimestamp","JoinedButtons","VirtualizedCodeLocationRow","codeLocation","repository","buildRepoAddress","allMetadata","esm_to_consumable_array","repoAddressAsHumanString","VirtualizedCodeLocationHeader","gridTemplateColumns","height","Gray600","HeaderCell","textAlign","RepositoryLocationsList","items","codeLocations","searchValue","parentRef","rowVirtualizer","useVirtualizer","count","getScrollElement","current","estimateSize","overscan","totalHeight","getTotalSize","getVirtualItems","horizontal","Spinner","purpose","overflow","Container","Inner","$totalHeight","DynamicRowContainer","$start","start","index","measureElement","row","type","node","vertical","NonIdealState","description","strong","flatten","locationEntries","all","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_loop","repositories","forEach","push","err","return","filterBySearch","flattened","queryString","toLocaleLowerCase","includes","flattenCodeLocationRows","filtered","CodeLocationsPage","useTrackPageView","useDocumentTitle","pageTitle","InstancePageContext","WorkspaceContext","setSearchValue","onChangeSearch","e","target","entryCount","showSearch","Heading","InstanceTabs","tab","TextInput","onChange","placeholder","Subheading","id","ReloadAllButton","instance_CodeLocationsPage","InstanceWarningIcon","daemons","DeploymentStatusContext","WarningTooltip","modifiers","offset","enabled","Yellow500","WorkspaceStatus","fillColor","Gray300","refreshState","healthTitle","canSeeConfig","useCanSeeConfig","flagInstanceConcurrencyLimits","useFeatureFlags","Tabs","selectedTabId","TabLink","QueryRefreshCountdown","data","useQuery","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","gql","label","_param_label","useUnscopedPermissions","permissions","canReloadWorkspace","disabledReasons","reloadFnForWorkspace","errorLocationId","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","RepositoryLocationErrorDialog","canEscapeKeyClose","canOutsideClickClose","DialogBody","PythonErrorInfo"],"sourceRoot":""}